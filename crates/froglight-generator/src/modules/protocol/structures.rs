//! Data structures used to represent data generated by `froglight-extractor`.

use serde::Deserialize;

#[derive(Debug, Clone, PartialEq, Eq, Deserialize)]
#[serde(rename_all = "UPPERCASE")]
pub(crate) struct ProtocolState {
    pub(crate) clientbound: Vec<String>,
    pub(crate) serverbound: Vec<String>,
}

#[derive(Debug, Clone, PartialEq, Eq, Deserialize)]
#[serde(rename_all = "lowercase")]
pub(crate) enum PacketFields {
    Named(Vec<(String, String)>),
    Unnamed(Vec<String>),
}

#[derive(Debug, Clone, PartialEq, Eq, Deserialize)]
#[serde(rename_all = "lowercase")]
pub(crate) enum FieldType {
    Obj(String),
    Vec(Box<FieldType>),
    Ty(serde_json::Value),
}
